{% extends 'base.html.twig' %}

{% block title %}Katzen Recipe Builder{% endblock %}

{% block body %}
<div class="container py-5">
  <h2 class="mb-3">Build a New Recipe</h2>
  <p class="text-muted"></p>

  <div class="card shadow-sm p-4">
    {{ form_start(recipe_form) }}
    <div id="ingredient-prototype" data-prototype="{{ form_widget(recipe_form.recipeIngredients.vars.prototype)|e('html_attr') }}"></div>

    <div class="mb-4">
      {{ form_row(recipe_form.title) }}
    </div>

    <div class="mb-4">
      <h5>Description</h5>
      <p class="text-muted">Just a sentence or two. We'll help you refine it later.</p>
      {{ form_row(recipe_form.summary) }}
    </div>    

    <div class="mb-4">
      <h5>Serving</h5>
      <div class="row">
        <div class="col-md-4">
          {{ form_row(recipe_form.serving_min_qty) }}
        </div>
        <div class="col-md-4">
          {{ form_row(recipe_form.serving_max_qty) }}
        </div>
        <div class="col-md-4">
          {{ form_row(recipe_form.serving_unit) }}
        </div>
      </div>
      <div class="row">
        <div class="col-md-4">
          {{ form_row(recipe_form.prep_time) }}
        </div>
        <div class="col-md-4">
          {{ form_row(recipe_form.cook_time) }}
        </div>
        <div class="col-md-4">
          {{ form_row(recipe_form.wait_time) }}
        </div>
      </div>      
    </div>

    <div class="mb-4">
      <h5>Add Ingredients</h5>
      <label for="item-selector" class="form-label">Search for an ingredient</label>
      <input type="text" id="item-selector" class="form-control" placeholder="Start typing...">
      <ul id="item-results" class="list-group mt-2"></ul>
      <div id="ingredients-list" class="mt-3">
        {{ form_row(recipe_form.recipeIngredients) }}
      </div>
    </div>

    <div class="text-end mt-4">
      {{ form_row(recipe_form.save) }}
    </div>

    {{ form_end(recipe_form) }}
  </div>

  <div class="mt-4">
    <a href="{{ path('app_recipe') }}" class="btn btn-outline-secondary">‚Üê Back to Dashboard</a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const input = document.getElementById('item-selector');
    const results = document.getElementById('item-results');
    const ingredientList = document.getElementById('ingredients-list');
    const prototypeContainer = document.getElementById('ingredient-prototype');
    let index = document.querySelectorAll('#ingredients-list .form-group').length;

    const prototype = prototypeContainer.dataset.prototype;

    input.addEventListener('input', async () => {
      const q = input.value.trim();
      if (q.length < 2) {
        results.innerHTML = '';
        return;
      }

      try {
        const baseUrl = '{{ path('item_search') }}';
        const response = await fetch(`${baseUrl}?q=${encodeURIComponent(q)}`);
        if (!response.ok) throw new Error('Search failed');
        const items = await response.json();

        results.innerHTML = '';
        items.forEach(item => {
          const li = document.createElement('li');
          li.className = 'list-group-item list-group-item-action';
          li.textContent = item.name;
          li.addEventListener('click', () => {
            addIngredientRow(item);
            input.value = '';
            results.innerHTML = '';
          });
          results.appendChild(li);
        });
      } catch (e) {
        console.error(e);
        results.innerHTML = '<li class="list-group-item text-danger">Search failed</li>';
      }      
    });

    function addIngredientRow(item) {
      let newForm = prototype.replace(/__name__/g, index);
      const tempDiv = document.createElement('div');
      tempDiv.innerHTML = newForm.trim();

      const itemInput = tempDiv.querySelector('[name$="[item]"]');
      if (!itemInput) {
        console.error('Ingredient prototype missing item field');
        return;
      }
      if (itemInput.tagName === 'SELECT') {
        const option = document.createElement('option');
        option.value = item.id;
        option.textContent = item.name;
        option.selected = true;
        itemInput.appendChild(option);
      } else {
        itemInput.value = item.id;
      }

      ingredientList.appendChild(tempDiv.firstElementChild);
      index++;
    }
  });
</script>
{% endblock %}
