<?php

namespace App\Profile\Service;

use App\Profile\Entity\Site;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Tools\SchemaTool;

class SiteService
{
    private EntityManagerInterface $em;
  
    public function __construct(
      EntityManagerInterface $em,
    ) {
        $this->em = $em;
    }

    public function provisionSchema(Site $site): void
    {
        /*
        // Skip provisioning during CLI (migrations, commands, etc) 
        if (\in_array(\PHP_SAPI, ['cli', 'phpdbg'], true)) {
          return;
        }
        */

        $schemaName = 'site_' . $site->getId();
        $conn       = $this->em->getConnection();
        $conn->executeStatement("CREATE SCHEMA IF NOT EXISTS \"$schemaName\"");
        $conn->executeStatement("SET search_path = \"$schemaName\"");
        
        // Pages
        $conn->executeStatement(<<<SQL
                                CREATE TABLE IF NOT EXISTS $schemaName.page (
                                  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  title VARCHAR(255) NOT NULL,
                                  slug VARCHAR(255) NOT NULL,
                                  data JSONB NOT NULL,
                                  is_published BOOLEAN NOT NULL,
                                  created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                  updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                  page_type VARCHAR(255) NOT NULL
                                )
           SQL
        );
        
        // Categories
        $conn->executeStatement(<<<SQL
          CREATE TABLE IF NOT EXISTS $schemaName.category (
            id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name VARCHAR(255) NOT NULL,
            description TEXT NOT NULL,
            schema JSONB NOT NULL,
            created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
            updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL
              )
          SQL
        );

        // Content
        $conn->executeStatement(<<<SQL
                                CREATE TABLE IF NOT EXISTS $schemaName.content (
                                  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  category_id INT NOT NULL,
                                  data JSONB NOT NULL,
                                  created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                  updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                  CONSTRAINT fk_content_category FOREIGN KEY (category_id)
                                    REFERENCES $schemaName.category(id)
                                    ON DELETE CASCADE
                                )
          SQL
        );

        // Revision
        $conn->executeStatement(<<<SQL
                                CREATE TABLE IF NOT EXISTS $schemaName.revision (
                                  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  table_name VARCHAR(255) NOT NULL,
                                  data JSONB NOT NULL,
                                  archived_at TIMESTAMP WITHOUT TIME ZONE NOT NULL
                                )
          SQL
        );

        $conn->executeStatement("SET search_path = 'public'");
   }
}
